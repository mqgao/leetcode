给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。
你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。


方法一不满足同一个元素不能使用两遍：
public int[] twoSum(int[] nums, int target) {
		int [] result = new int[2];
		for (int i = 0; i < nums.length; i++) {
			// 剩余的数
			int m = target - nums[i];
			for (int j = 0; j < nums.length; j ++) {
				if (j != i && nums[j] == m) {
					result[0] = i;
					result[1] = j;
					return  result;
				}
			}
		}
		return null;
	}

方法二：
	public int[] twoSum2(int[] nums, int target) {

		Map<Integer,Integer> map = new HashMap();
		for(int i=0; i<nums.length; i++){
			if(map.get(target - nums[i]) == null){
				map.put(nums[i], i);

			}else{
				int [] result = new int[2];
				result[0] = map.get(target - nums[i]);
				result[1] = i;
				return result;
			}
		}

		return null;
	}
